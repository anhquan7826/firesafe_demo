// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240201062711_SupplierAddress")]
    partial class SupplierAddress
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Firesafe.Domain.Entities.Cart", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "category_material"
                        },
                        new
                        {
                            CategoryId = "category_construction_material"
                        },
                        new
                        {
                            CategoryId = "category_paint"
                        },
                        new
                        {
                            CategoryId = "category_pipe_cable"
                        },
                        new
                        {
                            CategoryId = "category_electric_system"
                        },
                        new
                        {
                            CategoryId = "category_door"
                        },
                        new
                        {
                            CategoryId = "category_household_appliance"
                        },
                        new
                        {
                            CategoryId = "category_other"
                        });
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AddressDetail")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Newspaper", b =>
                {
                    b.Property<Guid>("NewspaperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EditedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("NewspaperId");

                    b.ToTable("Newspapers");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.NewspaperCategory", b =>
                {
                    b.Property<string>("NewspaperCategoryId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("NewspaperCategoryId");

                    b.ToTable("NewspaperCategories");

                    b.HasData(
                        new
                        {
                            NewspaperCategoryId = "newspaper_category_product_category"
                        },
                        new
                        {
                            NewspaperCategoryId = "newspaper_category_field"
                        });
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.NewspaperCategoryJunction", b =>
                {
                    b.Property<Guid>("NewspaperId")
                        .HasColumnType("uuid");

                    b.Property<string>("NewspaperCategoryId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("NewspaperId", "NewspaperCategoryId");

                    b.HasIndex("NewspaperCategoryId");

                    b.ToTable("NewspaperCategoryJunctions");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.NewspaperImage", b =>
                {
                    b.Property<Guid>("NewspaperImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("NewspaperId")
                        .HasColumnType("uuid");

                    b.HasKey("NewspaperImageId");

                    b.HasIndex("NewspaperId");

                    b.ToTable("NewspaperImages");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Origin", b =>
                {
                    b.Property<string>("OriginId")
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("OriginId");

                    b.ToTable("Origins");

                    b.HasData(
                        new
                        {
                            OriginId = "af",
                            Name = "Afghanistan"
                        },
                        new
                        {
                            OriginId = "ax",
                            Name = "Åland Islands"
                        },
                        new
                        {
                            OriginId = "al",
                            Name = "Albania"
                        },
                        new
                        {
                            OriginId = "dz",
                            Name = "Algeria"
                        },
                        new
                        {
                            OriginId = "as",
                            Name = "American Samoa"
                        },
                        new
                        {
                            OriginId = "ad",
                            Name = "Andorra"
                        },
                        new
                        {
                            OriginId = "ao",
                            Name = "Angola"
                        },
                        new
                        {
                            OriginId = "ai",
                            Name = "Anguilla"
                        },
                        new
                        {
                            OriginId = "aq",
                            Name = "Antarctica"
                        },
                        new
                        {
                            OriginId = "ag",
                            Name = "Antigua And Barbuda"
                        },
                        new
                        {
                            OriginId = "ar",
                            Name = "Argentina"
                        },
                        new
                        {
                            OriginId = "am",
                            Name = "Armenia"
                        },
                        new
                        {
                            OriginId = "aw",
                            Name = "Aruba"
                        },
                        new
                        {
                            OriginId = "au",
                            Name = "Australia"
                        },
                        new
                        {
                            OriginId = "at",
                            Name = "Austria"
                        },
                        new
                        {
                            OriginId = "az",
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            OriginId = "bs",
                            Name = "Bahamas"
                        },
                        new
                        {
                            OriginId = "bh",
                            Name = "Bahrain"
                        },
                        new
                        {
                            OriginId = "bd",
                            Name = "Bangladesh"
                        },
                        new
                        {
                            OriginId = "bb",
                            Name = "Barbados"
                        },
                        new
                        {
                            OriginId = "by",
                            Name = "Belarus"
                        },
                        new
                        {
                            OriginId = "be",
                            Name = "Belgium"
                        },
                        new
                        {
                            OriginId = "bz",
                            Name = "Belize"
                        },
                        new
                        {
                            OriginId = "bj",
                            Name = "Benin"
                        },
                        new
                        {
                            OriginId = "bm",
                            Name = "Bermuda"
                        },
                        new
                        {
                            OriginId = "bt",
                            Name = "Bhutan"
                        },
                        new
                        {
                            OriginId = "bo",
                            Name = "Bolivia"
                        },
                        new
                        {
                            OriginId = "ba",
                            Name = "Bosnia And Herzegovina"
                        },
                        new
                        {
                            OriginId = "bw",
                            Name = "Botswana"
                        },
                        new
                        {
                            OriginId = "bv",
                            Name = "Bouvet Island"
                        },
                        new
                        {
                            OriginId = "br",
                            Name = "Brazil"
                        },
                        new
                        {
                            OriginId = "io",
                            Name = "British Indian Ocean Territory"
                        },
                        new
                        {
                            OriginId = "bn",
                            Name = "Brunei Darussalam"
                        },
                        new
                        {
                            OriginId = "bg",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            OriginId = "bf",
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            OriginId = "bi",
                            Name = "Burundi"
                        },
                        new
                        {
                            OriginId = "kh",
                            Name = "Cambodia"
                        },
                        new
                        {
                            OriginId = "cm",
                            Name = "Cameroon"
                        },
                        new
                        {
                            OriginId = "ca",
                            Name = "Canada"
                        },
                        new
                        {
                            OriginId = "cv",
                            Name = "Cape Verde"
                        },
                        new
                        {
                            OriginId = "ky",
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            OriginId = "cf",
                            Name = "Central African Republic"
                        },
                        new
                        {
                            OriginId = "td",
                            Name = "Chad"
                        },
                        new
                        {
                            OriginId = "cl",
                            Name = "Chile"
                        },
                        new
                        {
                            OriginId = "cn",
                            Name = "China"
                        },
                        new
                        {
                            OriginId = "cx",
                            Name = "Christmas Island"
                        },
                        new
                        {
                            OriginId = "cc",
                            Name = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            OriginId = "co",
                            Name = "Colombia"
                        },
                        new
                        {
                            OriginId = "km",
                            Name = "Comoros"
                        },
                        new
                        {
                            OriginId = "cg",
                            Name = "Congo"
                        },
                        new
                        {
                            OriginId = "cd",
                            Name = "Congo, The Democratic Republic Of The"
                        },
                        new
                        {
                            OriginId = "ck",
                            Name = "Cook Islands"
                        },
                        new
                        {
                            OriginId = "cr",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            OriginId = "ci",
                            Name = "Côte D'Ivoire"
                        },
                        new
                        {
                            OriginId = "hr",
                            Name = "Croatia"
                        },
                        new
                        {
                            OriginId = "cu",
                            Name = "Cuba"
                        },
                        new
                        {
                            OriginId = "cy",
                            Name = "Cyprus"
                        },
                        new
                        {
                            OriginId = "cz",
                            Name = "Czech Republic"
                        },
                        new
                        {
                            OriginId = "dk",
                            Name = "Denmark"
                        },
                        new
                        {
                            OriginId = "dj",
                            Name = "Djibouti"
                        },
                        new
                        {
                            OriginId = "dm",
                            Name = "Dominica"
                        },
                        new
                        {
                            OriginId = "do",
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            OriginId = "ec",
                            Name = "Ecuador"
                        },
                        new
                        {
                            OriginId = "eg",
                            Name = "Egypt"
                        },
                        new
                        {
                            OriginId = "sv",
                            Name = "El Salvador"
                        },
                        new
                        {
                            OriginId = "gq",
                            Name = "Equatorial Guinea"
                        },
                        new
                        {
                            OriginId = "er",
                            Name = "Eritrea"
                        },
                        new
                        {
                            OriginId = "ee",
                            Name = "Estonia"
                        },
                        new
                        {
                            OriginId = "et",
                            Name = "Ethiopia"
                        },
                        new
                        {
                            OriginId = "fk",
                            Name = "Falkland Islands (Malvinas)"
                        },
                        new
                        {
                            OriginId = "fo",
                            Name = "Faroe Islands"
                        },
                        new
                        {
                            OriginId = "fj",
                            Name = "Fiji"
                        },
                        new
                        {
                            OriginId = "fi",
                            Name = "Finland"
                        },
                        new
                        {
                            OriginId = "fr",
                            Name = "France"
                        },
                        new
                        {
                            OriginId = "gf",
                            Name = "French Guiana"
                        },
                        new
                        {
                            OriginId = "pf",
                            Name = "French Polynesia"
                        },
                        new
                        {
                            OriginId = "tf",
                            Name = "French Southern Territories"
                        },
                        new
                        {
                            OriginId = "ga",
                            Name = "Gabon"
                        },
                        new
                        {
                            OriginId = "gm",
                            Name = "Gambia"
                        },
                        new
                        {
                            OriginId = "ge",
                            Name = "Georgia"
                        },
                        new
                        {
                            OriginId = "de",
                            Name = "Germany"
                        },
                        new
                        {
                            OriginId = "gh",
                            Name = "Ghana"
                        },
                        new
                        {
                            OriginId = "gi",
                            Name = "Gibraltar"
                        },
                        new
                        {
                            OriginId = "gr",
                            Name = "Greece"
                        },
                        new
                        {
                            OriginId = "gl",
                            Name = "Greenland"
                        },
                        new
                        {
                            OriginId = "gd",
                            Name = "Grenada"
                        },
                        new
                        {
                            OriginId = "gp",
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            OriginId = "gu",
                            Name = "Guam"
                        },
                        new
                        {
                            OriginId = "gt",
                            Name = "Guatemala"
                        },
                        new
                        {
                            OriginId = "gn",
                            Name = "Guinea"
                        },
                        new
                        {
                            OriginId = "gw",
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            OriginId = "gy",
                            Name = "Guyana"
                        },
                        new
                        {
                            OriginId = "ht",
                            Name = "Haiti"
                        },
                        new
                        {
                            OriginId = "hm",
                            Name = "Heard Island And Mcdonald Islands"
                        },
                        new
                        {
                            OriginId = "va",
                            Name = "Holy See (Vatican City State)"
                        },
                        new
                        {
                            OriginId = "hn",
                            Name = "Honduras"
                        },
                        new
                        {
                            OriginId = "hk",
                            Name = "Hong Kong"
                        },
                        new
                        {
                            OriginId = "hu",
                            Name = "Hungary"
                        },
                        new
                        {
                            OriginId = "is",
                            Name = "Iceland"
                        },
                        new
                        {
                            OriginId = "in",
                            Name = "India"
                        },
                        new
                        {
                            OriginId = "id",
                            Name = "Indonesia"
                        },
                        new
                        {
                            OriginId = "ir",
                            Name = "Iran, Islamic Republic Of"
                        },
                        new
                        {
                            OriginId = "iq",
                            Name = "Iraq"
                        },
                        new
                        {
                            OriginId = "ie",
                            Name = "Ireland"
                        },
                        new
                        {
                            OriginId = "il",
                            Name = "Israel"
                        },
                        new
                        {
                            OriginId = "it",
                            Name = "Italy"
                        },
                        new
                        {
                            OriginId = "jm",
                            Name = "Jamaica"
                        },
                        new
                        {
                            OriginId = "jp",
                            Name = "Japan"
                        },
                        new
                        {
                            OriginId = "jo",
                            Name = "Jordan"
                        },
                        new
                        {
                            OriginId = "kz",
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            OriginId = "ke",
                            Name = "Kenya"
                        },
                        new
                        {
                            OriginId = "ki",
                            Name = "Kiribati"
                        },
                        new
                        {
                            OriginId = "kp",
                            Name = "Korea, Democratic People'S Republic Of"
                        },
                        new
                        {
                            OriginId = "kr",
                            Name = "Korea, Republic Of"
                        },
                        new
                        {
                            OriginId = "kw",
                            Name = "Kuwait"
                        },
                        new
                        {
                            OriginId = "kg",
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            OriginId = "la",
                            Name = "Lao People'S Democratic Republic"
                        },
                        new
                        {
                            OriginId = "lv",
                            Name = "Latvia"
                        },
                        new
                        {
                            OriginId = "lb",
                            Name = "Lebanon"
                        },
                        new
                        {
                            OriginId = "ls",
                            Name = "Lesotho"
                        },
                        new
                        {
                            OriginId = "lr",
                            Name = "Liberia"
                        },
                        new
                        {
                            OriginId = "ly",
                            Name = "Libyan Arab Jamahiriya"
                        },
                        new
                        {
                            OriginId = "li",
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            OriginId = "lt",
                            Name = "Lithuania"
                        },
                        new
                        {
                            OriginId = "lu",
                            Name = "Luxembourg"
                        },
                        new
                        {
                            OriginId = "mo",
                            Name = "Macao"
                        },
                        new
                        {
                            OriginId = "mk",
                            Name = "Macedonia, The Former Yugoslav Republic Of"
                        },
                        new
                        {
                            OriginId = "mg",
                            Name = "Madagascar"
                        },
                        new
                        {
                            OriginId = "mw",
                            Name = "Malawi"
                        },
                        new
                        {
                            OriginId = "my",
                            Name = "Malaysia"
                        },
                        new
                        {
                            OriginId = "mv",
                            Name = "Maldives"
                        },
                        new
                        {
                            OriginId = "ml",
                            Name = "Mali"
                        },
                        new
                        {
                            OriginId = "mt",
                            Name = "Malta"
                        },
                        new
                        {
                            OriginId = "mh",
                            Name = "Marshall Islands"
                        },
                        new
                        {
                            OriginId = "mq",
                            Name = "Martinique"
                        },
                        new
                        {
                            OriginId = "mr",
                            Name = "Mauritania"
                        },
                        new
                        {
                            OriginId = "mu",
                            Name = "Mauritius"
                        },
                        new
                        {
                            OriginId = "yt",
                            Name = "Mayotte"
                        },
                        new
                        {
                            OriginId = "mx",
                            Name = "Mexico"
                        },
                        new
                        {
                            OriginId = "fm",
                            Name = "Micronesia, Federated States Of"
                        },
                        new
                        {
                            OriginId = "md",
                            Name = "Moldova, Republic Of"
                        },
                        new
                        {
                            OriginId = "mc",
                            Name = "Monaco"
                        },
                        new
                        {
                            OriginId = "mn",
                            Name = "Mongolia"
                        },
                        new
                        {
                            OriginId = "ms",
                            Name = "Montserrat"
                        },
                        new
                        {
                            OriginId = "ma",
                            Name = "Morocco"
                        },
                        new
                        {
                            OriginId = "mz",
                            Name = "Mozambique"
                        },
                        new
                        {
                            OriginId = "mm",
                            Name = "Myanmar"
                        },
                        new
                        {
                            OriginId = "na",
                            Name = "Namibia"
                        },
                        new
                        {
                            OriginId = "nr",
                            Name = "Nauru"
                        },
                        new
                        {
                            OriginId = "np",
                            Name = "Nepal"
                        },
                        new
                        {
                            OriginId = "nl",
                            Name = "Netherlands"
                        },
                        new
                        {
                            OriginId = "an",
                            Name = "Netherlands Antilles"
                        },
                        new
                        {
                            OriginId = "nc",
                            Name = "New Caledonia"
                        },
                        new
                        {
                            OriginId = "nz",
                            Name = "New Zealand"
                        },
                        new
                        {
                            OriginId = "ni",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            OriginId = "ne",
                            Name = "Niger"
                        },
                        new
                        {
                            OriginId = "ng",
                            Name = "Nigeria"
                        },
                        new
                        {
                            OriginId = "nu",
                            Name = "Niue"
                        },
                        new
                        {
                            OriginId = "nf",
                            Name = "Norfolk Island"
                        },
                        new
                        {
                            OriginId = "mp",
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            OriginId = "no",
                            Name = "Norway"
                        },
                        new
                        {
                            OriginId = "om",
                            Name = "Oman"
                        },
                        new
                        {
                            OriginId = "pk",
                            Name = "Pakistan"
                        },
                        new
                        {
                            OriginId = "pw",
                            Name = "Palau"
                        },
                        new
                        {
                            OriginId = "ps",
                            Name = "Palestinian Territory, Occupied"
                        },
                        new
                        {
                            OriginId = "pa",
                            Name = "Panama"
                        },
                        new
                        {
                            OriginId = "pg",
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            OriginId = "py",
                            Name = "Paraguay"
                        },
                        new
                        {
                            OriginId = "pe",
                            Name = "Peru"
                        },
                        new
                        {
                            OriginId = "ph",
                            Name = "Philippines"
                        },
                        new
                        {
                            OriginId = "pn",
                            Name = "Pitcairn"
                        },
                        new
                        {
                            OriginId = "pl",
                            Name = "Poland"
                        },
                        new
                        {
                            OriginId = "pt",
                            Name = "Portugal"
                        },
                        new
                        {
                            OriginId = "pr",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            OriginId = "qa",
                            Name = "Qatar"
                        },
                        new
                        {
                            OriginId = "re",
                            Name = "Réunion"
                        },
                        new
                        {
                            OriginId = "ro",
                            Name = "Romania"
                        },
                        new
                        {
                            OriginId = "ru",
                            Name = "Russian Federation"
                        },
                        new
                        {
                            OriginId = "rw",
                            Name = "Rwanda"
                        },
                        new
                        {
                            OriginId = "sh",
                            Name = "Saint Helena"
                        },
                        new
                        {
                            OriginId = "kn",
                            Name = "Saint Kitts And Nevis"
                        },
                        new
                        {
                            OriginId = "lc",
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            OriginId = "pm",
                            Name = "Saint Pierre And Miquelon"
                        },
                        new
                        {
                            OriginId = "vc",
                            Name = "Saint Vincent And The Grenadines"
                        },
                        new
                        {
                            OriginId = "ws",
                            Name = "Samoa"
                        },
                        new
                        {
                            OriginId = "sm",
                            Name = "San Marino"
                        },
                        new
                        {
                            OriginId = "st",
                            Name = "Sao Tome And Principe"
                        },
                        new
                        {
                            OriginId = "sa",
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            OriginId = "sn",
                            Name = "Senegal"
                        },
                        new
                        {
                            OriginId = "cs",
                            Name = "Serbia And Montenegro"
                        },
                        new
                        {
                            OriginId = "sc",
                            Name = "Seychelles"
                        },
                        new
                        {
                            OriginId = "sl",
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            OriginId = "sg",
                            Name = "Singapore"
                        },
                        new
                        {
                            OriginId = "sk",
                            Name = "Slovakia"
                        },
                        new
                        {
                            OriginId = "si",
                            Name = "Slovenia"
                        },
                        new
                        {
                            OriginId = "sb",
                            Name = "Solomon Islands"
                        },
                        new
                        {
                            OriginId = "so",
                            Name = "Somalia"
                        },
                        new
                        {
                            OriginId = "za",
                            Name = "South Africa"
                        },
                        new
                        {
                            OriginId = "gs",
                            Name = "South Georgia And The South Sandwich Islands"
                        },
                        new
                        {
                            OriginId = "es",
                            Name = "Spain"
                        },
                        new
                        {
                            OriginId = "lk",
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            OriginId = "sd",
                            Name = "Sudan"
                        },
                        new
                        {
                            OriginId = "sr",
                            Name = "Suriname"
                        },
                        new
                        {
                            OriginId = "sj",
                            Name = "Svalbard And Jan Mayen"
                        },
                        new
                        {
                            OriginId = "sz",
                            Name = "Swaziland"
                        },
                        new
                        {
                            OriginId = "se",
                            Name = "Sweden"
                        },
                        new
                        {
                            OriginId = "ch",
                            Name = "Switzerland"
                        },
                        new
                        {
                            OriginId = "sy",
                            Name = "Syrian Arab Republic"
                        },
                        new
                        {
                            OriginId = "tw",
                            Name = "Taiwan, Province Of China"
                        },
                        new
                        {
                            OriginId = "tj",
                            Name = "Tajikistan"
                        },
                        new
                        {
                            OriginId = "tz",
                            Name = "Tanzania, United Republic Of"
                        },
                        new
                        {
                            OriginId = "th",
                            Name = "Thailand"
                        },
                        new
                        {
                            OriginId = "tl",
                            Name = "Timor-Leste"
                        },
                        new
                        {
                            OriginId = "tg",
                            Name = "Togo"
                        },
                        new
                        {
                            OriginId = "tk",
                            Name = "Tokelau"
                        },
                        new
                        {
                            OriginId = "to",
                            Name = "Tonga"
                        },
                        new
                        {
                            OriginId = "tt",
                            Name = "Trinidad And Tobago"
                        },
                        new
                        {
                            OriginId = "tn",
                            Name = "Tunisia"
                        },
                        new
                        {
                            OriginId = "tr",
                            Name = "Turkey"
                        },
                        new
                        {
                            OriginId = "tm",
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            OriginId = "tc",
                            Name = "Turks And Caicos Islands"
                        },
                        new
                        {
                            OriginId = "tv",
                            Name = "Tuvalu"
                        },
                        new
                        {
                            OriginId = "ug",
                            Name = "Uganda"
                        },
                        new
                        {
                            OriginId = "ua",
                            Name = "Ukraine"
                        },
                        new
                        {
                            OriginId = "ae",
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            OriginId = "gb",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            OriginId = "us",
                            Name = "United States"
                        },
                        new
                        {
                            OriginId = "um",
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            OriginId = "uy",
                            Name = "Uruguay"
                        },
                        new
                        {
                            OriginId = "uz",
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            OriginId = "vu",
                            Name = "Vanuatu"
                        },
                        new
                        {
                            OriginId = "ve",
                            Name = "Venezuela"
                        },
                        new
                        {
                            OriginId = "vn",
                            Name = "Viet Nam"
                        },
                        new
                        {
                            OriginId = "vg",
                            Name = "Virgin Islands, British"
                        },
                        new
                        {
                            OriginId = "vi",
                            Name = "Virgin Islands, U.S."
                        },
                        new
                        {
                            OriginId = "wf",
                            Name = "Wallis And Futuna"
                        },
                        new
                        {
                            OriginId = "eh",
                            Name = "Western Sahara"
                        },
                        new
                        {
                            OriginId = "ye",
                            Name = "Yemen"
                        },
                        new
                        {
                            OriginId = "zm",
                            Name = "Zambia"
                        },
                        new
                        {
                            OriginId = "zw",
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Accessories")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("AdditionalSpecification")
                        .HasMaxLength(8000)
                        .HasColumnType("character varying(8000)");

                    b.Property<string>("Applications")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<bool>("Available")
                        .HasColumnType("boolean");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Color")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Faq")
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<string>("FireResistant")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("HasSample")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Material")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("OriginId")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Packaging")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("PostSupport")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("Price")
                        .HasColumnType("integer");

                    b.Property<int?>("PriceMax")
                        .HasColumnType("integer");

                    b.Property<int?>("PriceMin")
                        .HasColumnType("integer");

                    b.Property<string>("ProductionRate")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<short>("Rating")
                        .HasColumnType("smallint");

                    b.Property<string>("Shape")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<short>("ShippingTime")
                        .HasColumnType("smallint");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<string>("Structure")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Volume")
                        .HasColumnType("integer");

                    b.Property<short>("Warranty")
                        .HasColumnType("smallint");

                    b.Property<string>("WaterResistant")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int?>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("OriginId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductCertificate", b =>
                {
                    b.Property<Guid>("ProductCertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductCertificateId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCertifications");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductFavorite", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductFavorites");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductImage", b =>
                {
                    b.Property<Guid>("ProductImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("Order")
                        .HasColumnType("smallint");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("ProductImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductReview", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<short>("Rating")
                        .HasColumnType("smallint");

                    b.Property<string>("Review")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("ProductId", "UserId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductReviews");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductViewHistory", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("ProductViewHistories");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Province", b =>
                {
                    b.Property<int>("ProvinceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProvinceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("ProvinceId");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            ProvinceId = 1,
                            Name = "An Giang"
                        },
                        new
                        {
                            ProvinceId = 2,
                            Name = "Bà Rịa – Vũng Tàu"
                        },
                        new
                        {
                            ProvinceId = 3,
                            Name = "Bắc Giang"
                        },
                        new
                        {
                            ProvinceId = 4,
                            Name = "Bắc Kạn"
                        },
                        new
                        {
                            ProvinceId = 5,
                            Name = "Bạc Liêu"
                        },
                        new
                        {
                            ProvinceId = 6,
                            Name = "Bắc Ninh"
                        },
                        new
                        {
                            ProvinceId = 7,
                            Name = "Bến Tre"
                        },
                        new
                        {
                            ProvinceId = 8,
                            Name = "Bình Định"
                        },
                        new
                        {
                            ProvinceId = 9,
                            Name = "Bình Dương"
                        },
                        new
                        {
                            ProvinceId = 10,
                            Name = "Bình Phước"
                        },
                        new
                        {
                            ProvinceId = 11,
                            Name = "Bình Thuận"
                        },
                        new
                        {
                            ProvinceId = 12,
                            Name = "Cà Mau"
                        },
                        new
                        {
                            ProvinceId = 13,
                            Name = "Cần Thơ"
                        },
                        new
                        {
                            ProvinceId = 14,
                            Name = "Cao Bằng"
                        },
                        new
                        {
                            ProvinceId = 15,
                            Name = "Đà Nẵng"
                        },
                        new
                        {
                            ProvinceId = 16,
                            Name = "Đắk Lắk"
                        },
                        new
                        {
                            ProvinceId = 17,
                            Name = "Đắk Nông"
                        },
                        new
                        {
                            ProvinceId = 18,
                            Name = "Điện Biên"
                        },
                        new
                        {
                            ProvinceId = 19,
                            Name = "Đồng Nai"
                        },
                        new
                        {
                            ProvinceId = 20,
                            Name = "Đồng Tháp"
                        },
                        new
                        {
                            ProvinceId = 21,
                            Name = "Gia Lai"
                        },
                        new
                        {
                            ProvinceId = 22,
                            Name = "Hà Giang"
                        },
                        new
                        {
                            ProvinceId = 23,
                            Name = "Hà Nam"
                        },
                        new
                        {
                            ProvinceId = 24,
                            Name = "Hà Nội"
                        },
                        new
                        {
                            ProvinceId = 25,
                            Name = "Hà Tĩnh"
                        },
                        new
                        {
                            ProvinceId = 26,
                            Name = "Hải Dương"
                        },
                        new
                        {
                            ProvinceId = 27,
                            Name = "Hải Phòng"
                        },
                        new
                        {
                            ProvinceId = 28,
                            Name = "Hậu Giang"
                        },
                        new
                        {
                            ProvinceId = 29,
                            Name = "Hòa Bình"
                        },
                        new
                        {
                            ProvinceId = 30,
                            Name = "Hưng Yên"
                        },
                        new
                        {
                            ProvinceId = 31,
                            Name = "Khánh Hòa"
                        },
                        new
                        {
                            ProvinceId = 32,
                            Name = "Kiên Giang"
                        },
                        new
                        {
                            ProvinceId = 33,
                            Name = "Kon Tum"
                        },
                        new
                        {
                            ProvinceId = 34,
                            Name = "Lai Châu"
                        },
                        new
                        {
                            ProvinceId = 35,
                            Name = "Lâm Đồng"
                        },
                        new
                        {
                            ProvinceId = 36,
                            Name = "Lạng Sơn"
                        },
                        new
                        {
                            ProvinceId = 37,
                            Name = "Lào Cai"
                        },
                        new
                        {
                            ProvinceId = 38,
                            Name = "Long An"
                        },
                        new
                        {
                            ProvinceId = 39,
                            Name = "Nam Định"
                        },
                        new
                        {
                            ProvinceId = 40,
                            Name = "Nghệ An"
                        },
                        new
                        {
                            ProvinceId = 41,
                            Name = "Ninh Bình"
                        },
                        new
                        {
                            ProvinceId = 42,
                            Name = "Ninh Thuận"
                        },
                        new
                        {
                            ProvinceId = 43,
                            Name = "Phú Thọ"
                        },
                        new
                        {
                            ProvinceId = 44,
                            Name = "Phú Yên"
                        },
                        new
                        {
                            ProvinceId = 45,
                            Name = "Quảng Bình"
                        },
                        new
                        {
                            ProvinceId = 46,
                            Name = "Quảng Nam"
                        },
                        new
                        {
                            ProvinceId = 47,
                            Name = "Quảng Ngãi"
                        },
                        new
                        {
                            ProvinceId = 48,
                            Name = "Quảng Ninh"
                        },
                        new
                        {
                            ProvinceId = 49,
                            Name = "Quảng Trị"
                        },
                        new
                        {
                            ProvinceId = 50,
                            Name = "Sóc Trăng"
                        },
                        new
                        {
                            ProvinceId = 51,
                            Name = "Sơn La"
                        },
                        new
                        {
                            ProvinceId = 52,
                            Name = "Tây Ninh"
                        },
                        new
                        {
                            ProvinceId = 53,
                            Name = "Thái Bình"
                        },
                        new
                        {
                            ProvinceId = 54,
                            Name = "Thái Nguyên"
                        },
                        new
                        {
                            ProvinceId = 55,
                            Name = "Thanh Hóa"
                        },
                        new
                        {
                            ProvinceId = 56,
                            Name = "Thừa Thiên Huế"
                        },
                        new
                        {
                            ProvinceId = 57,
                            Name = "Tiền Giang"
                        },
                        new
                        {
                            ProvinceId = 58,
                            Name = "Thành phố Hồ Chí Minh"
                        },
                        new
                        {
                            ProvinceId = 59,
                            Name = "Trà Vinh"
                        },
                        new
                        {
                            ProvinceId = 60,
                            Name = "Tuyên Quang"
                        },
                        new
                        {
                            ProvinceId = 61,
                            Name = "Vĩnh Long"
                        },
                        new
                        {
                            ProvinceId = 62,
                            Name = "Vĩnh Phúc"
                        },
                        new
                        {
                            ProvinceId = 63,
                            Name = "Yên Bái"
                        });
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Role", b =>
                {
                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Type");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Type = "supplier"
                        });
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Supplier", b =>
                {
                    b.Property<Guid>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Banner")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("character varying(10000)");

                    b.Property<DateOnly>("EstablishedAt")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("ProvinceId")
                        .HasColumnType("integer");

                    b.Property<short>("Rating")
                        .HasColumnType("smallint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("SupplierId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.SupplierContact", b =>
                {
                    b.Property<Guid>("ContactId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid");

                    b.HasKey("ContactId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierContacts");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.SupplierReview", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uuid");

                    b.Property<short>("Rating")
                        .HasColumnType("smallint");

                    b.Property<string>("Review")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("UserId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("UserId");

                    b.ToTable("SupplierReviews");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirebaseId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("UserId");

                    b.HasIndex("FirebaseId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.UserDevice", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("FcmToken")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "FcmToken");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("RoleType")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("UserId", "RoleType");

                    b.HasIndex("RoleType");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Cart", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Product", "Product")
                        .WithOne()
                        .HasForeignKey("Firesafe.Domain.Entities.Cart", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.User", null)
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.NewspaperCategoryJunction", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.NewspaperCategory", "NewspaperCategory")
                        .WithMany("NewspaperCategoryJunctions")
                        .HasForeignKey("NewspaperCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.Newspaper", "Newspaper")
                        .WithMany()
                        .HasForeignKey("NewspaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Newspaper");

                    b.Navigation("NewspaperCategory");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.NewspaperImage", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Newspaper", null)
                        .WithMany("NewspaperImages")
                        .HasForeignKey("NewspaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Product", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Origin", "Origin")
                        .WithMany("Products")
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Origin");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductCertificate", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Product", "Product")
                        .WithMany("ProductCertificates")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductFavorite", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Product", null)
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductReview", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Firesafe.Domain.Entities.User", "User")
                        .WithMany("ProductReviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.ProductViewHistory", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Supplier", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId");

                    b.HasOne("Firesafe.Domain.Entities.User", "User")
                        .WithOne("Supplier")
                        .HasForeignKey("Firesafe.Domain.Entities.Supplier", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Province");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.SupplierContact", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Contact", "Contact")
                        .WithMany("SupplierContacts")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.Supplier", "Supplier")
                        .WithMany("SupplierContacts")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.SupplierReview", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Supplier", "Supplier")
                        .WithMany("SupplierReviews")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.User", "User")
                        .WithMany("SupplierReviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.UserDevice", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.User", "User")
                        .WithMany("UserDevices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Firesafe.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firesafe.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Contact", b =>
                {
                    b.Navigation("SupplierContacts");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Newspaper", b =>
                {
                    b.Navigation("NewspaperImages");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.NewspaperCategory", b =>
                {
                    b.Navigation("NewspaperCategoryJunctions");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Origin", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCertificates");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SupplierContacts");

                    b.Navigation("SupplierReviews");
                });

            modelBuilder.Entity("Firesafe.Domain.Entities.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("ProductReviews");

                    b.Navigation("Supplier");

                    b.Navigation("SupplierReviews");

                    b.Navigation("UserDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
